#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from waflib import Utils, Options
from waflib.Build import BuildContext
from waflib.Scripting import Dist

APPNAME='zerogw'
VERSION='0.5.9'

top = '.'
out = 'build'

def options(opt):
    opt.load('compiler_c')
    opt.recurse('libwebsite')
    opt.recurse('coyaml')

def configure(conf):
    conf.load('compiler_c')
    conf.recurse('libwebsite')
    conf.recurse('coyaml')

def build(bld):
    bld.recurse('libwebsite')
    bld.recurse('coyaml')
    bld.add_group()
    bld(
        features     = ['c', 'cprogram'],
        source       = [
            'src/config.c',
            'src/main.c',
            'src/log.c',
            'src/websocket.c',
            'src/sieve.c',
            'src/zutils.c',
            'src/http.c',
            'src/resolve.c',
            'src/uidgen.c',
            'src/request.c',
            'src/polling.c',
            'src/disk.c',
            'src/commands.c',
            'src/pool.c',
            'src/msgqueue.c',
            ],
        target       = 'zerogw',
        includes     = ['src', 'libev', 'libwebsite/include', 'libyaml/include', 'coyaml/include', '/usr/pkg/include/','/usr/local/include'],
        libpath      = ['libyaml', 'libwebsite'],
        defines      = [
            'LOG_STRIP_PATH="../src/"',
            ],
        cflags      = ['-std=c99'],
        lib          = ['zmq', 'ssl', 'coyaml', 'website', 'ev', 'yaml'],
        )

    if bld.env['PREFIX'] == '/usr':
        bld.install_files('/etc', ['examples/zerogw.yaml'])
    else:
        bld.install_files('${PREFIX}/etc', ['examples/zerogw.yaml'])

def dist(ctx):
    ctx.excl = [
        'doc/_build/**',
        '.waf*', '*.tar.bz2', '*.zip', 'build',
        '.git*', '.lock*', '**/*.pyc', '**/*.swp', '**/*~'
        ]
    ctx.algo = 'tar.bz2'
